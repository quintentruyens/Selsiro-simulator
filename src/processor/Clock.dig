<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Width</string>
      <int>5</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>Clock</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C_in</string>
        </entry>
        <entry>
          <string>Frequency</string>
          <int>50</int>
        </entry>
      </elementAttributes>
      <pos x="640" y="640"/>
    </visualElement>
    <visualElement>
      <elementName>T_FF</elementName>
      <elementAttributes/>
      <pos x="640" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="620" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>Counter</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="740" y="640"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>50</long>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>dec</intFormat>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Value = args.Scale;</string>
        </entry>
      </elementAttributes>
      <pos x="840" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Comparator</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="860" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>T_FF</elementName>
      <elementAttributes/>
      <pos x="960" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="940" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes/>
      <pos x="1040" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Probe</elementName>
      <elementAttributes>
        <entry>
          <string>intFormat</string>
          <intFormat>dec</intFormat>
        </entry>
      </elementAttributes>
      <pos x="820" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Start/Stop</string>
        </entry>
      </elementAttributes>
      <pos x="500" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Step</string>
        </entry>
      </elementAttributes>
      <pos x="500" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C</string>
        </entry>
      </elementAttributes>
      <pos x="1120" y="640"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>No scaling</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>Scale := 1;</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	C_in Start/Stop Step C
# Disabled by default
loop(i, 10)
	0    0          0    0
end loop

# Enable =&gt; flips every cycle
	0    C          0    0
loop(i, 10)
	C    0          0    1
	C    0          0    0
end loop

# Disable
	0    C          0    0
loop(i, 10)
	C    0          0    0
end loop

# Use step
loop(i, 10)
	0    0          1    1
	0    0          0    0
end loop

# Run for one cycle
	0    C          0    0
	C    0          0    1
	0    C          0    1

# Step works inverted
loop(i, 10)
	0    0          0    1
	0    0          1    0
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="560" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>Scale := 50;</string>
        </entry>
      </elementAttributes>
      <pos x="620" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes/>
      <pos x="660" y="640"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Scale 2</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	C_in Start/Stop Step C
# Disabled by default
loop(i, 20)
	0    0          0    0
end loop

# Enable =&gt; flips every other cycle
	0    C          0    0
loop(i, 10)
	C    0          0    0
	C    0          0    1
	C    0          0    1
	C    0          0    0
end loop

# Disable
	0    C          0    0
loop(i, 20)
	C    0          0    0
end loop</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>Scale := 2;</string>
        </entry>
      </elementAttributes>
      <pos x="700" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Scale 5</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	C_in Start/Stop Step C
# Disabled by default
loop(i, 50)
	0    0          0    0
end loop

# Enable =&gt; flips every other cycle
	0    C          0    0
loop(i, 10)
	C    0          0    0
	C    0          0    0
	C    0          0    0
	C    0          0    0
	C    0          0    1
	C    0          0    1
	C    0          0    1
	C    0          0    1
	C    0          0    1
	C    0          0    0
end loop

# Disable
	0    C          0    0
loop(i, 50)
	C    0          0    0
end loop</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>Scale := 5;</string>
        </entry>
      </elementAttributes>
      <pos x="840" y="800"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="800" y="640"/>
      <p2 x="820" y="640"/>
    </wire>
    <wire>
      <p1 x="920" y="640"/>
      <p2 x="940" y="640"/>
    </wire>
    <wire>
      <p1 x="1100" y="640"/>
      <p2 x="1120" y="640"/>
    </wire>
    <wire>
      <p1 x="720" y="640"/>
      <p2 x="740" y="640"/>
    </wire>
    <wire>
      <p1 x="640" y="640"/>
      <p2 x="660" y="640"/>
    </wire>
    <wire>
      <p1 x="820" y="640"/>
      <p2 x="860" y="640"/>
    </wire>
    <wire>
      <p1 x="940" y="640"/>
      <p2 x="960" y="640"/>
    </wire>
    <wire>
      <p1 x="640" y="720"/>
      <p2 x="720" y="720"/>
    </wire>
    <wire>
      <p1 x="720" y="720"/>
      <p2 x="940" y="720"/>
    </wire>
    <wire>
      <p1 x="1000" y="660"/>
      <p2 x="1040" y="660"/>
    </wire>
    <wire>
      <p1 x="500" y="660"/>
      <p2 x="520" y="660"/>
    </wire>
    <wire>
      <p1 x="720" y="660"/>
      <p2 x="740" y="660"/>
    </wire>
    <wire>
      <p1 x="700" y="580"/>
      <p2 x="720" y="580"/>
    </wire>
    <wire>
      <p1 x="620" y="580"/>
      <p2 x="640" y="580"/>
    </wire>
    <wire>
      <p1 x="520" y="740"/>
      <p2 x="1000" y="740"/>
    </wire>
    <wire>
      <p1 x="500" y="600"/>
      <p2 x="640" y="600"/>
    </wire>
    <wire>
      <p1 x="720" y="680"/>
      <p2 x="740" y="680"/>
    </wire>
    <wire>
      <p1 x="640" y="680"/>
      <p2 x="660" y="680"/>
    </wire>
    <wire>
      <p1 x="840" y="620"/>
      <p2 x="860" y="620"/>
    </wire>
    <wire>
      <p1 x="940" y="620"/>
      <p2 x="960" y="620"/>
    </wire>
    <wire>
      <p1 x="1020" y="620"/>
      <p2 x="1040" y="620"/>
    </wire>
    <wire>
      <p1 x="720" y="680"/>
      <p2 x="720" y="720"/>
    </wire>
    <wire>
      <p1 x="720" y="580"/>
      <p2 x="720" y="640"/>
    </wire>
    <wire>
      <p1 x="640" y="680"/>
      <p2 x="640" y="720"/>
    </wire>
    <wire>
      <p1 x="820" y="640"/>
      <p2 x="820" y="700"/>
    </wire>
    <wire>
      <p1 x="520" y="660"/>
      <p2 x="520" y="740"/>
    </wire>
    <wire>
      <p1 x="1000" y="660"/>
      <p2 x="1000" y="740"/>
    </wire>
    <wire>
      <p1 x="940" y="640"/>
      <p2 x="940" y="720"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>